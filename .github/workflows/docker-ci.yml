name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build_test_push_demo_app:
    name: build_test_push_demo_app
    permissions: write-all
    runs-on: ubuntu-latest
    env:
      DOCKER_REPOSITORY: jonlimpw # name of Docker Hub ID
      IMAGE_NAME: cg-demo

    steps:
      - uses: actions/checkout@v4

      - name: Get Short SHA
        id: sha
        run: echo "short_sha=$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1
        with:
          cosign-release: 'v2.2.0'

      - name: Build and Push Demo App Docker Image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: ${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}
          registry: docker.io
          dockerfile: ./demo-app/Dockerfile
          directory: ./demo-app
          tags: latest,${{ steps.sha.outputs.short_sha }},v1.0.0-${{ steps.sha.outputs.short_sha }}
          buildArgs: "DD_GIT_REPOSITORY_URL=github.com/jon94/chainguard-controller-poc,DD_GIT_COMMIT_SHA=$(git rev-parse HEAD)"
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Wait for DockerHub Processing
        run: |
          echo "⏳ Waiting for DockerHub to process the demo app image..."
          sleep 30

      - name: Get Demo App Image Digest
        id: demo_digest
        run: |
          # Get the digest of the newly pushed demo app image
          TOKEN=$(curl -s "https://auth.docker.io/token?service=registry.docker.io&scope=repository:jonlimpw/cg-demo:pull" | jq -r .token)
          DIGEST=$(curl -s -H "Authorization: Bearer $TOKEN" -H "Accept: application/vnd.docker.distribution.manifest.v2+json" "https://registry-1.docker.io/v2/jonlimpw/cg-demo/manifests/latest" | jq -r '.config.digest // empty')
          
          if [ -z "$DIGEST" ]; then
            # Fallback: get digest from response headers
            DIGEST=$(curl -s -I -H "Authorization: Bearer $TOKEN" -H "Accept: application/vnd.docker.distribution.manifest.v2+json" "https://registry-1.docker.io/v2/jonlimpw/cg-demo/manifests/latest" | grep -i docker-content-digest | cut -d' ' -f2 | tr -d '\r')
          fi
          
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT
          echo "📋 Demo app digest: $DIGEST"

      - name: Sign Demo App Image
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          echo "🔐 Signing demo app image with Cosign..."
          cosign sign --yes jonlimpw/cg-demo@${{ steps.demo_digest.outputs.digest }}
          echo "✅ Demo app image signed successfully!"

  build_test_push_controller:
    name: build_test_push_controller
    permissions: write-all
    runs-on: ubuntu-latest
    env:
      DOCKER_REPOSITORY: jonlimpw # name of Docker Hub ID
      IMAGE_NAME: secure-controller

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run Controller Tests
        working-directory: ./controller
        run: |
          make test
          make vet

      - name: Get Short SHA
        id: sha
        run: echo "short_sha=$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1
        with:
          cosign-release: 'v2.2.0'

      - name: Build and Push Controller Docker Image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: ${{ env.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}
          registry: docker.io
          dockerfile: ./controller/Dockerfile
          directory: ./controller
          tags: latest,${{ steps.sha.outputs.short_sha }},v1.0.0-${{ steps.sha.outputs.short_sha }}
          buildArgs: "DD_GIT_REPOSITORY_URL=github.com/jon94/chainguard-controller-poc,DD_GIT_COMMIT_SHA=$(git rev-parse HEAD)"
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Wait for DockerHub Processing
        run: |
          echo "⏳ Waiting for DockerHub to process the controller image..."
          sleep 30

      - name: Get Controller Image Digest
        id: controller_digest
        run: |
          # Get the digest of the newly pushed controller image
          TOKEN=$(curl -s "https://auth.docker.io/token?service=registry.docker.io&scope=repository:jonlimpw/secure-controller:pull" | jq -r .token)
          DIGEST=$(curl -s -H "Authorization: Bearer $TOKEN" -H "Accept: application/vnd.docker.distribution.manifest.v2+json" "https://registry-1.docker.io/v2/jonlimpw/secure-controller/manifests/latest" | jq -r '.config.digest // empty')
          
          if [ -z "$DIGEST" ]; then
            # Fallback: get digest from response headers
            DIGEST=$(curl -s -I -H "Authorization: Bearer $TOKEN" -H "Accept: application/vnd.docker.distribution.manifest.v2+json" "https://registry-1.docker.io/v2/jonlimpw/secure-controller/manifests/latest" | grep -i docker-content-digest | cut -d' ' -f2 | tr -d '\r')
          fi
          
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT
          echo "📋 Controller digest: $DIGEST"

      - name: Sign Controller Image
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          echo "🔐 Signing controller image with Cosign..."
          cosign sign --yes jonlimpw/secure-controller@${{ steps.controller_digest.outputs.digest }}
          echo "✅ Controller image signed successfully!"

      - name: Verify Both Signatures
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          echo "🔍 Verifying both image signatures..."
          echo "Verifying controller image..."
          cosign verify jonlimpw/secure-controller@${{ steps.controller_digest.outputs.digest }}
          echo "✅ Controller signature verified!"
          echo ""
          echo "🎯 Both images are now signed and verified!"

  update_demo_deployment:
    name: update_demo_deployment
    needs: [build_test_push_demo_app]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Get Latest Image Digest
        id: digest
        run: |
          # Wait a moment for DockerHub to process the push
          sleep 30
          
          # Get the digest of the newly pushed image
          DIGEST=$(docker manifest inspect jonlimpw/cg-demo:latest | jq -r '.config.digest')
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT
          echo "Latest cg-demo digest: $DIGEST"
      
      - name: Trigger Controller Detection
        run: |
          echo "🎯 New image pushed! The Chainguard Controller will detect this within 10 seconds."
          echo "📋 Image: jonlimpw/cg-demo@${{ steps.digest.outputs.digest }}"
          echo "⚡ Demo deployments using tags will be flagged as non-compliant"
          echo "✅ Deployments using this digest will be compliant"
