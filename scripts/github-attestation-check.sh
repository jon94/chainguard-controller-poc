#!/bin/bash

# Check GitHub Actions attestations using GitHub CLI
# This demonstrates how to verify attestations generated by GitHub Actions

set -e

echo "üîç GitHub Actions Attestation Verification"
echo "=========================================="
echo ""

# Check if GitHub CLI is installed
if ! command -v gh &> /dev/null; then
    echo "üì• Installing GitHub CLI..."
    
    if [[ "$OSTYPE" == "darwin"* ]]; then
        brew install gh
    else
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh
    fi
    
    echo "‚úÖ GitHub CLI installed successfully"
    echo ""
fi

# Repository and image details
REPO="jon94/chainguard-controller-poc"
IMAGE_NAME="jonlimpw/cg-demo"

echo "üéØ Repository: $REPO"
echo "üéØ Image: $IMAGE_NAME"
echo ""

echo "üìã GitHub Actions Attestation Commands:"
echo "======================================="
echo ""

echo "1Ô∏è‚É£ List Attestations for Repository:"
echo "------------------------------------"
echo "gh attestation list --repo $REPO"
echo ""

echo "2Ô∏è‚É£ Verify Attestation for Specific Image:"
echo "-----------------------------------------"
echo "gh attestation verify oci://$IMAGE_NAME:latest --repo $REPO"
echo ""

echo "3Ô∏è‚É£ Download Attestation Bundle:"
echo "-------------------------------"
echo "gh attestation download --repo $REPO --predicate-type=https://slsa.dev/provenance/v0.2"
echo ""

echo "4Ô∏è‚É£ Verify with Custom Predicate Type:"
echo "-------------------------------------"
echo "gh attestation verify oci://$IMAGE_NAME:latest \\"
echo "  --repo $REPO \\"
echo "  --predicate-type=https://slsa.dev/provenance/v0.2"
echo ""

echo "üîç Manual Verification Steps:"
echo "============================="
echo ""

echo "Step 1: Authenticate with GitHub"
echo "gh auth login"
echo ""

echo "Step 2: Check if attestations exist"
echo "gh attestation list --repo $REPO"
echo ""

echo "Step 3: Verify specific image"
echo "gh attestation verify oci://$IMAGE_NAME@\$(docker inspect $IMAGE_NAME:latest --format='{{index .RepoDigests 0}}' | cut -d'@' -f2) --repo $REPO"
echo ""

echo "üìä Attestation Validation Workflow:"
echo "==================================="
echo ""
echo "1. üîç Discovery: Find available attestations"
echo "2. üì• Download: Retrieve attestation bundles"
echo "3. ‚úÖ Verify: Validate cryptographic signatures"
echo "4. üîé Inspect: Examine attestation content"
echo "5. üõ°Ô∏è  Enforce: Apply policy decisions"
echo ""

echo "üéØ Enterprise Integration:"
echo "========================="
echo ""
echo "‚Ä¢ Integrate with CI/CD pipelines for automated verification"
echo "‚Ä¢ Use in Kubernetes admission controllers"
echo "‚Ä¢ Combine with policy engines (OPA, Kyverno)"
echo "‚Ä¢ Monitor compliance dashboards"
echo ""

echo "‚ö†Ô∏è  Note: GitHub attestations require the repository to have"
echo "   attestation generation enabled in GitHub Actions workflows."
